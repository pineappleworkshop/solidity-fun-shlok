{
	"id": "52f74c33c97d93637536c00e022e63b2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Minter.sol": {
				"content": "//SPDX-License-Identifier: UNIDENTIFIED\n\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract Minter {\n\n    address public wallet1;\n\n    address public wallet2;\n\n    address public paytok;\n\n    //ERC20 to pay for minting\n    function mint()external payable{\n\n\n    }\n\n\n    //handle withdrawal to 2 wallets\n\n    function withdraw() external onlyOwners {\n\n    }\n\n    modifier onlyOwners(){\n        require(msg.sender == wallet1 || msg.sender == wallet2, \"Not an authorized wallet\");\n\n        _;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Minter.sol": {
				"Minter": {
					"abi": [
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paytok",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet2",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Minter.sol\":125:539  contract Minter {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Minter.sol\":125:539  contract Minter {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0b8d0a28\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1249c58b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1a026c96\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa5f030ac\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Minter.sol\":177:199  address public wallet2 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Minter.sol\":265:305  function mint()external payable{... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Minter.sol\":148:170  address public wallet1 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Minter.sol\":350:398  function withdraw() external onlyOwners {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Minter.sol\":206:227  address public paytok */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Minter.sol\":177:199  address public wallet2 */\n    tag_9:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Minter.sol\":265:305  function mint()external payable{... */\n    tag_13:\n      jump\t// out\n        /* \"Minter.sol\":148:170  address public wallet1 */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Minter.sol\":350:398  function withdraw() external onlyOwners {... */\n    tag_20:\n        /* \"Minter.sol\":457:464  wallet1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Minter.sol\":443:464  msg.sender == wallet1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Minter.sol\":443:453  msg.sender */\n      caller\n        /* \"Minter.sol\":443:464  msg.sender == wallet1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Minter.sol\":443:489  msg.sender == wallet1 || msg.sender == wallet2 */\n      dup1\n      tag_27\n      jumpi\n      pop\n        /* \"Minter.sol\":482:489  wallet2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Minter.sol\":468:489  msg.sender == wallet2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Minter.sol\":468:478  msg.sender */\n      caller\n        /* \"Minter.sol\":468:489  msg.sender == wallet2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Minter.sol\":443:489  msg.sender == wallet1 || msg.sender == wallet2 */\n    tag_27:\n        /* \"Minter.sol\":435:518  require(msg.sender == wallet1 || msg.sender == wallet2, \"Not an authorized wallet\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"Minter.sol\":350:398  function withdraw() external onlyOwners {... */\n      jump\t// out\n        /* \"Minter.sol\":206:227  address public paytok */\n    tag_23:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_32:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_33:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_41\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_32\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_34:\n        /* \"#utility.yul\":328:352   */\n      tag_43\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_45\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_34\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:762   */\n    tag_35:\n        /* \"#utility.yul\":677:688   */\n      0x00\n        /* \"#utility.yul\":711:717   */\n      dup3\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:718   */\n      mstore\n        /* \"#utility.yul\":751:755   */\n      0x20\n        /* \"#utility.yul\":746:749   */\n      dup3\n        /* \"#utility.yul\":742:756   */\n      add\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:942   */\n    tag_36:\n        /* \"#utility.yul\":908:934   */\n      0x4e6f7420616e20617574686f72697a65642077616c6c65740000000000000000\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":896:902   */\n      dup3\n        /* \"#utility.yul\":892:906   */\n      add\n        /* \"#utility.yul\":885:935   */\n      mstore\n        /* \"#utility.yul\":768:942   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":948:1314   */\n    tag_37:\n        /* \"#utility.yul\":1090:1093   */\n      0x00\n        /* \"#utility.yul\":1111:1178   */\n      tag_49\n        /* \"#utility.yul\":1175:1177   */\n      0x18\n        /* \"#utility.yul\":1170:1173   */\n      dup4\n        /* \"#utility.yul\":1111:1178   */\n      tag_35\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1104:1178   */\n      swap2\n      pop\n        /* \"#utility.yul\":1187:1280   */\n      tag_50\n        /* \"#utility.yul\":1276:1279   */\n      dup3\n        /* \"#utility.yul\":1187:1280   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1305:1307   */\n      0x20\n        /* \"#utility.yul\":1300:1303   */\n      dup3\n        /* \"#utility.yul\":1296:1308   */\n      add\n        /* \"#utility.yul\":1289:1308   */\n      swap1\n      pop\n        /* \"#utility.yul\":948:1314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1320:1739   */\n    tag_30:\n        /* \"#utility.yul\":1486:1490   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x20\n        /* \"#utility.yul\":1513:1522   */\n      dup3\n        /* \"#utility.yul\":1509:1527   */\n      add\n        /* \"#utility.yul\":1501:1527   */\n      swap1\n      pop\n        /* \"#utility.yul\":1573:1582   */\n      dup2\n        /* \"#utility.yul\":1567:1571   */\n      dup2\n        /* \"#utility.yul\":1563:1583   */\n      sub\n        /* \"#utility.yul\":1559:1560   */\n      0x00\n        /* \"#utility.yul\":1548:1557   */\n      dup4\n        /* \"#utility.yul\":1544:1561   */\n      add\n        /* \"#utility.yul\":1537:1584   */\n      mstore\n        /* \"#utility.yul\":1601:1732   */\n      tag_52\n        /* \"#utility.yul\":1727:1731   */\n      dup2\n        /* \"#utility.yul\":1601:1732   */\n      tag_37\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1593:1732   */\n      swap1\n      pop\n        /* \"#utility.yul\":1320:1739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f1976ae751948f761fe9949987caceec06a34c906c4020462b364222660b5a3264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061035a806100206000396000f3fe60806040526004361061004a5760003560e01c80630b8d0a281461004f5780631249c58b1461007a5780631a026c96146100845780633ccfd60b146100af578063a5f030ac146100c6575b600080fd5b34801561005b57600080fd5b506100646100f1565b604051610071919061028c565b60405180910390f35b610082610117565b005b34801561009057600080fd5b50610099610119565b6040516100a6919061028c565b60405180910390f35b3480156100bb57600080fd5b506100c461013d565b005b3480156100d257600080fd5b506100db610225565b6040516100e8919061028c565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806101e45750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a90610304565b60405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102768261024b565b9050919050565b6102868161026b565b82525050565b60006020820190506102a1600083018461027d565b92915050565b600082825260208201905092915050565b7f4e6f7420616e20617574686f72697a65642077616c6c65740000000000000000600082015250565b60006102ee6018836102a7565b91506102f9826102b8565b602082019050919050565b6000602082019050818103600083015261031d816102e1565b905091905056fea2646970667358221220f1976ae751948f761fe9949987caceec06a34c906c4020462b364222660b5a3264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB8D0A28 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x1A026C96 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xA5F030AC EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1E4 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x223 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A SWAP1 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x276 DUP3 PUSH2 0x24B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x286 DUP2 PUSH2 0x26B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420616E20617574686F72697A65642077616C6C65740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE PUSH1 0x18 DUP4 PUSH2 0x2A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9 DUP3 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31D DUP2 PUSH2 0x2E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SWAP8 PUSH11 0xE751948F761FE9949987CA 0xCE 0xEC MOD LOG3 0x4C SWAP1 PUSH13 0x4020462B364222660B5A326473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "125:414:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@mint_90": {
									"entryPoint": 279,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paytok_86": {
									"entryPoint": 549,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@wallet1_82": {
									"entryPoint": 281,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@wallet2_84": {
									"entryPoint": 241,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_96": {
									"entryPoint": 317,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1742:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "699:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "727:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "727:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "661:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "666:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "677:11:2",
														"type": ""
													}
												],
												"src": "593:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "874:68:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "904:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "892:14:2"
																	},
																	{
																		"hexValue": "4e6f7420616e20617574686f72697a65642077616c6c6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "908:26:2",
																		"type": "",
																		"value": "Not an authorized wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "885:50:2"
														}
													]
												},
												"name": "store_literal_in_memory_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "866:6:2",
														"type": ""
													}
												],
												"src": "768:174:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1094:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1104:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1170:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1175:2:2",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1111:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1276:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3",
																	"nodeType": "YulIdentifier",
																	"src": "1187:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1289:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1300:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1305:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1296:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1289:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1082:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:2",
														"type": ""
													}
												],
												"src": "948:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1501:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1513:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1501:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1548:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1559:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1544:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1544:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1567:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1573:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1563:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1563:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1537:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1537:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1593:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1727:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1601:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1471:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1486:4:2",
														"type": ""
													}
												],
												"src": "1320:419:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not an authorized wallet\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80630b8d0a281461004f5780631249c58b1461007a5780631a026c96146100845780633ccfd60b146100af578063a5f030ac146100c6575b600080fd5b34801561005b57600080fd5b506100646100f1565b604051610071919061028c565b60405180910390f35b610082610117565b005b34801561009057600080fd5b50610099610119565b6040516100a6919061028c565b60405180910390f35b3480156100bb57600080fd5b506100c461013d565b005b3480156100d257600080fd5b506100db610225565b6040516100e8919061028c565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806101e45750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a90610304565b60405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102768261024b565b9050919050565b6102868161026b565b82525050565b60006020820190506102a1600083018461027d565b92915050565b600082825260208201905092915050565b7f4e6f7420616e20617574686f72697a65642077616c6c65740000000000000000600082015250565b60006102ee6018836102a7565b91506102f9826102b8565b602082019050919050565b6000602082019050818103600083015261031d816102e1565b905091905056fea2646970667358221220f1976ae751948f761fe9949987caceec06a34c906c4020462b364222660b5a3264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB8D0A28 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x1A026C96 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xA5F030AC EQ PUSH2 0xC6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1E4 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x223 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A SWAP1 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x276 DUP3 PUSH2 0x24B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x286 DUP2 PUSH2 0x26B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420616E20617574686F72697A65642077616C6C65740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE PUSH1 0x18 DUP4 PUSH2 0x2A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9 DUP3 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31D DUP2 PUSH2 0x2E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SWAP8 PUSH11 0xE751948F761FE9949987CA 0xCE 0xEC MOD LOG3 0x4C SWAP1 PUSH13 0x4020462B364222660B5A326473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "125:414:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;265:40;;;:::i;:::-;;148:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;350:48;;;;;;;;;;;;;:::i;:::-;;206:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;177:22;;;;;;;;;;;;;:::o;265:40::-;:::o;148:22::-;;;;;;;;;;;;:::o;350:48::-;457:7;;;;;;;;;;443:21;;:10;:21;;;:46;;;;482:7;;;;;;;;;;;468:21;;:10;:21;;;443:46;435:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;350:48::o;206:21::-;;;;;;;;;;;;;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:169::-;677:11;711:6;706:3;699:19;751:4;746:3;742:14;727:29;;593:169;;;;:::o;768:174::-;908:26;904:1;896:6;892:14;885:50;768:174;:::o;948:366::-;1090:3;1111:67;1175:2;1170:3;1111:67;:::i;:::-;1104:74;;1187:93;1276:3;1187:93;:::i;:::-;1305:2;1300:3;1296:12;1289:19;;948:366;;;:::o;1320:419::-;1486:4;1524:2;1513:9;1509:18;1501:26;;1573:9;1567:4;1563:20;1559:1;1548:9;1544:17;1537:47;1601:131;1727:4;1601:131;:::i;:::-;1593:139;;1320:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "171600",
								"executionCost": "214",
								"totalCost": "171814"
							},
							"external": {
								"mint()": "120",
								"paytok()": "2580",
								"wallet1()": "2533",
								"wallet2()": "2492",
								"withdraw()": "4819"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 125,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 125,
									"end": 539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 539,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1976ae751948f761fe9949987caceec06a34c906c4020462b364222660b5a3264736f6c63430008110033",
									".code": [
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "B8D0A28"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1249C58B"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1A026C96"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "3CCFD60B"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "A5F030AC"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 539,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 177,
											"end": 199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 265,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 265,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 265,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 265,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 265,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 265,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 265,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 265,
											"end": 305,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 148,
											"end": 170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 148,
											"end": 170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 350,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 350,
											"end": 398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 350,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 350,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 350,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 206,
											"end": 227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 206,
											"end": 227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 177,
											"end": 199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 265,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 265,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 265,
											"end": 305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 148,
											"end": 170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 148,
											"end": 170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 457,
											"end": 464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 457,
											"end": 464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 464,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 457,
											"end": 464,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 457,
											"end": 464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 464,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 457,
											"end": 464,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 457,
											"end": 464,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 443,
											"end": 453,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 443,
											"end": 464,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 464,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 443,
											"end": 464,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 443,
											"end": 489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 443,
											"end": 489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 443,
											"end": 489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 482,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 489,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 482,
											"end": 489,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 482,
											"end": 489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 489,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 482,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 468,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 468,
											"end": 489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 468,
											"end": 478,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 468,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 468,
											"end": 489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 468,
											"end": 489,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 443,
											"end": 489,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 443,
											"end": 489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 435,
											"end": 518,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 518,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 435,
											"end": 518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 435,
											"end": 518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 435,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 435,
											"end": 518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 518,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 435,
											"end": 518,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 435,
											"end": 518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 206,
											"end": 227,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 593,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 699,
											"end": 718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 742,
											"end": 756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 942,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 768,
											"end": 942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7420616E20617574686F72697A65642077616C6C65740000000000000000"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 892,
											"end": 906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 885,
											"end": 935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 768,
											"end": 942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1314,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 948,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1111,
											"end": 1178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1111,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1178,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1276,
											"end": 1279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1187,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1280,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1187,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1739,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1320,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1501,
											"end": 1527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1557,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1537,
											"end": 1584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1601,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1732,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1601,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1739,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Minter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"mint()": "1249c58b",
							"paytok()": "a5f030ac",
							"wallet1()": "1a026c96",
							"wallet2()": "0b8d0a28",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paytok\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Minter.sol\":\"Minter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Minter.sol\":{\"keccak256\":\"0x4ba87d8091b57ef8823589bdbcc7d9605678fff62fa933ef15b9becc7ae8b8f6\",\"license\":\"UNIDENTIFIED\",\"urls\":[\"bzz-raw://43a068a5a50cb1421f92691dbf25718434e72bcef92efac4c4f2a1b604854c55\",\"dweb:/ipfs/QmePDXRvjpQ7pcsDK2FLD55zPxeQAg7wWGZwYYWB1nTE2W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "Minter.sol:Minter",
								"label": "wallet1",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 84,
								"contract": "Minter.sol:Minter",
								"label": "wallet2",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 86,
								"contract": "Minter.sol:Minter",
								"label": "paytok",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"Minter.sol": {
				"ast": {
					"absolutePath": "Minter.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Minter": [
							114
						]
					},
					"id": 115,
					"license": "UNIDENTIFIED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 115,
							"sourceUnit": 78,
							"src": "67:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Minter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "Minter",
							"nameLocation": "134:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "1a026c96",
									"id": 82,
									"mutability": "mutable",
									"name": "wallet1",
									"nameLocation": "163:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 114,
									"src": "148:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0b8d0a28",
									"id": 84,
									"mutability": "mutable",
									"name": "wallet2",
									"nameLocation": "192:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 114,
									"src": "177:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a5f030ac",
									"id": 86,
									"mutability": "mutable",
									"name": "paytok",
									"nameLocation": "221:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 114,
									"src": "206:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 85,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "206:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "296:9:1",
										"statements": []
									},
									"functionSelector": "1249c58b",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "274:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:1"
									},
									"scope": 114,
									"src": "265:40:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "390:8:1",
										"statements": []
									},
									"functionSelector": "3ccfd60b",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwners",
												"nameLocations": [
													"379:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "379:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "379:10:1"
										}
									],
									"name": "withdraw",
									"nameLocation": "359:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "367:2:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:0:1"
									},
									"scope": 114,
									"src": "350:48:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "425:112:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 99,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "443:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "447:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "443:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 101,
																	"name": "wallet1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "457:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "443:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 103,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "468:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "472:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "468:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 105,
																	"name": "wallet2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "482:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "468:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "443:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e20617574686f72697a65642077616c6c6574",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "491:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3",
																"typeString": "literal_string \"Not an authorized wallet\""
															},
															"value": "Not an authorized wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5a1ba43f120822eba240b2131c8b84ea87d2b850d9365b74b7d5d40d752a6d3",
																"typeString": "literal_string \"Not an authorized wallet\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "435:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "435:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "435:83:1"
											},
											{
												"id": 111,
												"nodeType": "PlaceholderStatement",
												"src": "529:1:1"
											}
										]
									},
									"id": 113,
									"name": "onlyOwners",
									"nameLocation": "413:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:1"
									},
									"src": "404:133:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 115,
							"src": "125:414:1",
							"usedErrors": []
						}
					],
					"src": "41:498:1"
				},
				"id": 1
			}
		}
	}
}